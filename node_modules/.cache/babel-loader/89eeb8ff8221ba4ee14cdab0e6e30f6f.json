{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pkdch\\\\Dropbox\\\\code\\\\JS\\\\updated_react_complete_guide\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(filteredYearExpense => {\n    return filteredYearExpense.date.getFullYear().toString() === filteredYear;\n  }); // default value to be override if filteredExpenses length is > 0\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 24\n  }, this);\n\n  if (filteredExpenses > 0) {}\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }, this), filteredExpenses.length > 0 && filteredExpenses.map(expenseEntry => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expenseEntry.title,\n      amount: expenseEntry.amount,\n      date: expenseEntry.date\n    }, expenseEntry.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/pkdch/Dropbox/code/JS/updated_react_complete_guide/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","filteredYearExpense","date","getFullYear","toString","expenseContent","length","map","expenseEntry","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,mBAAD,IAAyB;AACnE,WAAOA,mBAAmB,CAACC,IAApB,CAAyBC,WAAzB,GAAuCC,QAAvC,OAAsDV,YAA7D;AACD,GAFwB,CAAzB,CAP0B,CAW1B;;AACA,MAAIW,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AAEA,MAAIP,gBAAgB,GAAG,CAAvB,EAA0B,CAEzB;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEJ,YADZ;AAEE,MAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,EAOGE,gBAAgB,CAACQ,MAAjB,KAA4B,CAA5B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPpC,EAQGR,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IAA+BR,gBAAgB,CAACS,GAAjB,CAAsBC,YAAD,iBACjD,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,YAAY,CAACC,KAFtB;AAGE,MAAA,MAAM,EAAED,YAAY,CAACE,MAHvB;AAIE,MAAA,IAAI,EAAEF,YAAY,CAACN;AAJrB,OACOM,YAAY,CAACG,EADpB;AAAA;AAAA;AAAA;AAAA,YAD4B,CARlC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApCD;;GAAMnB,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((filteredYearExpense) => {\r\n    return filteredYearExpense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  // default value to be override if filteredExpenses length is > 0\r\n  let expenseContent = <p>No Expenses</p>;\r\n\r\n  if (filteredExpenses > 0) {\r\n \r\n  }\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      {/* using a JS trick of && operator always return the part after\r\n       it, as a result of this overall check */}\r\n      {filteredExpenses.length === 0 && <p>No Expenses</p>}\r\n      {filteredExpenses.length > 0 && filteredExpenses.map((expenseEntry) => (\r\n          <ExpenseItem\r\n            key={expenseEntry.id}\r\n            title={expenseEntry.title}\r\n            amount={expenseEntry.amount}\r\n            date={expenseEntry.date}\r\n          />\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}